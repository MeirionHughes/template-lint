{"version":3,"sources":["template-lint.spec.ts"],"names":[],"mappings":"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","file":"template-lint.spec.js","sourcesContent":["/// <reference path=\"template-lint.ts\" />\r\nimport {\r\n  Linter, \r\n  SelfCloseRule, \r\n  TemplateRule, \r\n  RouterRule,\r\n  RequireRule} from '../dist/template-lint';\r\n\r\ndescribe(\"SelfClose Rule\", () => {\r\n\r\n  var linter: Linter = new Linter([\r\n    new SelfCloseRule()\r\n  ]);\r\n\r\n  it(\"will reject self-closed template\", (done) => {\r\n    linter.lint('<template/>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it(\"will reject self-closed non-void\", (done) => {\r\n    linter.lint('<template><div/></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it(\"will reject self-closed custom-element\", (done) => {\r\n    linter.lint('<template><custom-element/></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });\r\n\r\n  it(\"will allow self-closed void elements\", (done) => {\r\n\r\n    linter.lint('<template><br/></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBe(0);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n\r\ndescribe(\"Template Rule\", () => {\r\n\r\n  var linter: Linter = new Linter([\r\n    new TemplateRule()\r\n  ]);\r\n  \r\n  it(\"will accept template root element\", (done) => {\r\n    linter.lint('<temslat></temslat>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });\r\n  \r\n  it(\"will reject non-template root element\", (done) => {\r\n    linter.lint('<template></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBe(0);\r\n        done();\r\n      });\r\n  });\r\n  \r\n  it(\"will reject more than one template\", (done) => {\r\n    linter.lint('<template></template><template></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });\r\n  \r\n  it(\"will pass template with valid contents\", (done) => {\r\n    linter.lint('<template><button></button><div></div></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBe(0);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n\r\n\r\ndescribe(\"Router Rule\", () => {\r\n\r\n  var linter: Linter = new Linter([\r\n    new RouterRule()\r\n  ]);\r\n  \r\n  \r\n  it(\"will reject router-view with tag contents\", (done) => {\r\n    linter.lint('<template><router-view><br/></router-view></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });\r\n});\r\n\r\n\r\ndescribe(\"Require Rule\", () => {\r\n\r\n  var linter: Linter = new Linter([\r\n    new RequireRule()\r\n  ]);  \r\n  \r\n   it(\"will pass require elements with a from attribute\", (done) => {\r\n    linter.lint('<template><require from=\"something\"></require></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBe(0);\r\n        done();\r\n      });\r\n  });\r\n  \r\n  it(\"will reject require elements without a from attribute\", (done) => {\r\n    linter.lint('<template><require fgh=\"something\"></require></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });  \r\n});\r\n\r\ndescribe(\"Parser Rule\", () => {\r\n\r\n  var linter: Linter = new Linter();  \r\n    \r\n  it(\"will error on unclosed element\", (done) => {\r\n    linter.lint('<template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });  \r\n  \r\n   it(\"will error on nested unclosed element\", (done) => {\r\n    linter.lint('<template><div></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  }); \r\n  \r\n   it(\"will error on nested misnamed closing element\", (done) => {\r\n    linter.lint('<template><div></dvi></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });  \r\n  \r\n  it(\"will error on multiple nested closing element (multiple)\", (done) => {\r\n    linter.lint('<template><div><div><div></div></div></template>')\r\n      .then((errors) => {\r\n        expect(errors.length).toBeGreaterThan(0);\r\n        done();\r\n      });\r\n  });  \r\n});"],"sourceRoot":"../source"}