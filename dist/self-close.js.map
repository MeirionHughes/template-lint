{"version":3,"sources":["self-close.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAGb,uBAAmB,QAAQ,CAAC,CAAA;AAE5B,6BAAwB,cAAc,CAAC,CAAA;AAEvC;;GAEG;AACH,4BAAmC,WAAI;IACnC,IAAI,CAAC,MAAiB,EAAE,UAAsB;QAC1C,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAE/B,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ;YAErD,IAAI,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;YAE7B,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;gBACpC,MAAM,CAAC;YACX,CAAC;YAED,EAAE,CAAC,CAAC,WAAW,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,WAAW,CAAC,IAAI,sBAAS,CAAC,sBAAsB,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAA;YACxF,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AAnBY,qBAAa,gBAmBzB,CAAA","file":"self-close.js","sourcesContent":["\"use strict\";\r\n\r\nimport {SAXParser} from 'parse5';\r\nimport {Rule} from './rule';\r\nimport {ParseState} from './parse-state';\r\nimport {RuleError} from './rule-error';\r\n\r\n/**\r\n * Rule to ensure non-void elements do not self-close\r\n */\r\nexport class SelfCloseRule extends Rule {\r\n    init(parser: SAXParser, parseState: ParseState) {\r\n        super.init(parser, parseState);\r\n\r\n        var self = this;\r\n\r\n        parser.on('startTag', (name, attrs, selfClosing, location) => {\r\n           \r\n            let scope = parseState.scope;\r\n\r\n            if (scope == 'svg' || scope == 'math') {\r\n                return;\r\n            }\r\n\r\n            if (selfClosing && parseState.isVoid(name) == false) {\r\n                self.reportError(new RuleError(\"self-closing element\", location.line, location.col))\r\n            }\r\n        });\r\n    }\r\n}"],"sourceRoot":"../source"}