{"version":3,"sources":["obsolete-tag.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAGb,uBAAmB,QAAQ,CAAC,CAAA;AAE5B,6BAAwB,cAAc,CAAC,CAAA;AAEvC;;GAEG;AACH,8BAAqC,WAAI;IAKrC,YAAY,QAA0C;QAElD,OAAO,CAAC;QAER,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,QAAQ,GAAC,EAAE,CAAA;IAC3C,CAAC;IAED,IAAI,CAAC,MAAiB,EAAE,UAAsB;QAC1C,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAG/B,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG;YAE/C,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;YAElD,EAAE,CAAA,CAAC,MAAM,CAAC,CACV,CAAC;gBACG,IAAI,GAAG,GAAG,IAAI,GAAG,eAAe,CAAC;gBACjC,IAAI,KAAK,GAAG,IAAI,sBAAS,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC9D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AA5BY,uBAAe,kBA4B3B,CAAA","file":"obsolete-tag.js","sourcesContent":["\"use strict\";\r\n\r\nimport {SAXParser} from 'parse5';\r\nimport {Rule} from './rule';\r\nimport {ParseState} from './parse-state';\r\nimport {RuleError} from './rule-error';\r\n\r\n/**\r\n * Rule to ensure tags are properly closed. \r\n */\r\nexport class ObsoleteTagRule extends Rule {\r\n    private parseState: ParseState;\r\n    \r\n    obsoletes:Array<{tag:string, msg?:string}>\r\n    \r\n    constructor(obsolete?:Array<{tag:string, msg?:string}>)\r\n    {                \r\n        super();     \r\n\r\n        this.obsoletes = obsolete ? obsolete:[]     \r\n    }\r\n\r\n    init(parser: SAXParser, parseState: ParseState) {\r\n        super.init(parser, parseState);\r\n       \r\n        \r\n        parser.on(\"startTag\", (tag, attrs, selfClosing, loc)=>{                     \r\n            \r\n            var result = this.obsoletes.find(x=>x.tag == tag);\r\n\r\n            if(result)\r\n            {\r\n                let str = `<${tag}> is obsolete`;\r\n                let error = new RuleError(str, loc.line, loc.col, result.msg);\r\n                this.reportError(error);\r\n            }\r\n        });\r\n    }\r\n}"],"sourceRoot":"../source"}