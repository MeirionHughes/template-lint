{"version":3,"sources":["rule.ts"],"names":[],"mappings":";AAIA;;EAEE;AACF;IAGI;QACI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAES,WAAW,CAAC,KAAY;QAC9B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;IACL,CAAC;IAED,IAAI,CAAC,MAAiB,EAAE,UAAsB;IAC9C,CAAC;IAED,QAAQ;QACJ,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;AACL,CAAC;AArBqB,YAAI,OAqBzB,CAAA","file":"rule.js","sourcesContent":["import {SAXParser} from 'parse5';\r\nimport {ParseState} from './parse-state';\r\nimport {Issue} from './issue';\r\n\r\n/**\r\n* Abstract Lint Rule \r\n*/\r\nexport abstract class Rule {\r\n    private issues: Issue[];\r\n\r\n    constructor() {\r\n        this.issues = [];\r\n    }\r\n\r\n    protected reportIssue(issue: Issue) {\r\n        if (issue) {\r\n            this.issues.push(issue);\r\n        }\r\n    }\r\n\r\n    init(parser: SAXParser, parseState: ParseState) {\r\n    }\r\n\r\n    finalise(): Issue[] {\r\n        let issues = this.issues;\r\n        this.issues = [];\r\n        return issues;\r\n    }\r\n}"],"sourceRoot":"../source"}