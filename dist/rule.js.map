{"version":3,"sources":["rule.ts"],"names":[],"mappings":";AAIA;;EAEE;AACF;IAGI;QAEI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,CAAC;IAES,WAAW,CAAC,KAAgB;QAClC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAA,CAAC;YACP,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC;IACL,CAAC;IAED,IAAI,CAAC,MAAiB,EAAE,UAAsB;IAC9C,CAAC;IAED,QAAQ;QACJ,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;AACL,CAAC;AAtBqB,YAAI,OAsBzB,CAAA","file":"rule.js","sourcesContent":["import {SAXParser} from 'parse5';\r\nimport {ParseState} from './parse-state';\r\nimport {RuleError} from './rule-error';\r\n\r\n/**\r\n* Abstract Lint Rule \r\n*/\r\nexport abstract class Rule {\r\n    private errors: RuleError[];\r\n    \r\n    constructor()\r\n    {\r\n        this.errors = [];\r\n    }\r\n        \r\n    protected reportError(error: RuleError) {\r\n        if (error){\r\n            this.errors.push(error);\r\n        }\r\n    }\r\n    \r\n    init(parser: SAXParser, parseState: ParseState) {\r\n    }\r\n\r\n    finalise(): RuleError[] {\r\n        let errors = this.errors;\r\n        this.errors = [];\r\n        return errors;        \r\n    }\r\n}"],"sourceRoot":"../source"}