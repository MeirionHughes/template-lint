{"version":3,"sources":["linter.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,yBAA8C,QAAQ,CAAC,CAAA;AAEvD,yBAAuB,QAAQ,CAAC,CAAA;AAEhC,8BAAyB,eAAe,CAAC,CAAA;AAGzC;IAMI,YAAY,KAAa,EAAE,MAAgB,EAAE,KAAe;QACxD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YACR,KAAK,GAAG,EAAE,CAAC;QAEd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,IAAI,CAAC,IAAY;QAEb,IAAI,MAAM,GAAc,IAAI,kBAAS,CAAC,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;QAC9D,IAAI,UAAU,GAAe,IAAI,wBAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACrE,IAAI,MAAM,GAAa,IAAI,iBAAQ,EAAE,CAAC;QAEtC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAEhC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;YACf,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAGjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE/B,IAAI,SAAS,GAAG,IAAI,OAAO,CAAO,UAAU,OAAO,EAAE,MAAM;YACvD,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE;gBACX,UAAU,CAAC,QAAQ,EAAE,CAAC;gBACtB,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,SAAS,GAAG,EAAE,CAAC;QAEnB,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;YACf,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;gBACtB,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC;YACH,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO;YAEtC,IAAI,GAAG,GAAG,IAAI,KAAK,EAAa,CAAC;YAEjC,OAAO,CAAC,OAAO,CAAC,KAAK;gBACjB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;AACL,CAAC;AA/DY,cAAM,SA+DlB,CAAA","file":"linter.js","sourcesContent":["\"use strict\";\r\n\r\nimport {SAXParser, StartTagLocationInfo} from 'parse5';\r\nimport * as parse5 from 'parse5';\r\nimport {Readable} from 'stream';\r\nimport {Rule} from './rule';\r\nimport {ParseState} from './parse-state';\r\nimport {RuleError} from './rule-error';\r\n\r\nexport class Linter {\r\n\r\n    private rules: Array<Rule>;\r\n    private scopes:string[];\r\n    private voids:string[];\r\n\r\n    constructor(rules: Rule[], scopes?:string[], voids?:string[]) {\r\n        if (!rules)\r\n           rules = [];\r\n           \r\n        this.rules = rules;\r\n        this.scopes = scopes;\r\n        this.voids = voids;\r\n    }\r\n\r\n    lint(html: string): Promise<RuleError[]> {\r\n        \r\n        var parser: SAXParser = new SAXParser({ locationInfo: true });\r\n        var parseState: ParseState = new ParseState(this.scopes, this.voids);\r\n        var stream: Readable = new Readable();\r\n\r\n        parseState.initPreRules(parser);\r\n\r\n        let rules = this.rules;\r\n\r\n        rules.forEach((rule) => {\r\n            rule.init(parser, parseState);\r\n        });\r\n\r\n        parseState.initPostRules(parser);\r\n\r\n\r\n        stream.push(html);\r\n        stream.push(null);\r\n        var work = stream.pipe(parser);\r\n\r\n        var completed = new Promise<void>(function (resolve, reject) {\r\n            work.on(\"end\", () => {\r\n                parseState.finalise();\r\n                resolve();\r\n            });\r\n        });\r\n\r\n        var ruleTasks = [];\r\n\r\n        rules.forEach((rule) => {\r\n            let task = completed.then(() => {\r\n                return rule.finalise();\r\n            });\r\n            ruleTasks.push(task);\r\n        });\r\n\r\n        return Promise.all(ruleTasks).then(results => {\r\n\r\n            var all = new Array<RuleError>();\r\n\r\n            results.forEach(parts => {\r\n                all = all.concat(parts);\r\n            });\r\n\r\n            return all;\r\n        });\r\n    }\r\n}"],"sourceRoot":"../source"}